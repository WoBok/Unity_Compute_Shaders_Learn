// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Red
#pragma kernel Yellow
#pragma kernel SplitScreen

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
int texResolution;

[numthreads(8, 8, 1)]
void Red(uint3 id : SV_DispatchThreadID) {
    Result[id.xy] = float4(1.0, 0.0, 0.0, 1.0);
}

[numthreads(8, 8, 1)]
void Yellow(uint3 id : SV_DispatchThreadID) {
    Result[id.xy] = float4(1.0, 1.0, 0.0, 1.0);
}

[numthreads(8, 8, 1)]
void SplitScreen(uint3 id : SV_DispatchThreadID) {
    int halfRes = texResolution >> 1;
    Result[id.xy] = float4(step(halfRes, id.x), step(halfRes, id.y), 0.0, 1.0);
}